/*встановлює обнулення відступів та полів для всіх елементів на веб-сторінці.*/
*,
*:before,
*:after{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
/*Тут створюється псевдоелемент ::before для елемента з класом .container.*/
.container:before {
  content: "My Task List";
  position: absolute;
  top: -100px; /* Регулюйте значення, щоб налаштувати відступ зверху */
  left: 0;
  right: 0;
  text-align: center;
  font-size: 80px;
  line-height: 30px;
  padding: 10px 0;
}
/*Цей блок встановлює висоту всього тіла документа та колір*/
body{
    height: 100vh;
    background: #d292d4;
}
.container{
    width: 40%;
    min-width: 450px;
    position: absolute;
    transform: translate(-50%,-50%);
    top: 50%;
    left: 50%;
    background: white;
    border-radius: 10px;

}
/* задає стилі для блоку додавання нового завдання.*/
#newtask{
  position: relative;
  padding: 30px 20px;
}
/*задає стиль для завершених завдань (закреслення тексту).*/
.completed{
  text-decoration: line-through;
}
/*задає стилі для блоку із завданнями, розташованими всередині контейнера.*/
.todo {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    max-width: 400px;
    margin: 15px auto;
  }
/*задає стилі для блоку введення нового завдання у додатку чи інтерфейсі "Список задач"*/
.todo__input {
  position: relative;/*вказує на відносне позиціонування елемента всередині його батьківського контейнера.*/
}
/*визначає стилі для текстового поля введення у задачі або елементі списку задач. */
.todo__text {
  width: 225px;/*Встановлює ширину текстового поля введення 225 пікселів.*/
  padding: 6px 34px 6px 10px;/*Задає відступи всередині текстового поля.*/
  font-size: inherit;/*Наслідує розмір шрифту з батьківського елемента. Це означає, що розмір шрифту буде тим самим, що й у батьківського елемента.*/
  font-family: inherit;/*Спадковує сімейство шрифтів з батьківського елемента.*/
  line-height: inherit;/*успадковує висоту рядка з батьківського елемента.*/
  border: 1px solid #e0e0e0;/*Вказує межу для текстового поля введення. У цьому випадку межа має товщину 1 піксель і колір #e0e0e0.*/
  border-radius: 4px;/* Задає радіус заокруглення кутів межі текстового поля введення. У цьому випадку радіус заокруглення становить 4 пікселі.*/
  outline: none;/*Прибирає контурне обведення текстового поля при отриманні ним фокуса. */
}
  .todo__text:focus {
    border-color: #dcedc8;
  }
  .todo__add {
    position: absolute;
    top: 50%;
    right: 5px;
    width: 26px;
    height: 26px;
    background-color: #dfbfdd;
    transform: translateY(-50%);
    cursor: pointer;
    transition: background-color 0.15s ease-in;
  }
  /*він показує, що з наведенні курсору цей елемент його фоновий колір зміниться*/
  .todo__add:hover {
    background-color: #e7abba57;
  }
  
  .todo__text:disabled + .todo__add {
    background-color: #e982dd;
    cursor: default;/*це стандартний курсор, який буде відображатися при наведенні на елемент.*/
    opacity: 0.5;/*це означає, що елемент буде напівпрозорим, пропускаючи деяку кількість фону та контенту крізь себе.*/
  }
  .todo__add::before {
    position: absolute;
    top: 5px;/* устанавливают расстояние от верхнего края родительского элемента до позиции псевдоэлемента.*/
    left: 5px;/* устанавливают расстояние от левого края родительского элемента до позиции псевдоэлемента.*/
    width: 16px;/* задают ширину псевдоэлемента.*/
    height: 16px;/* задают высоту псевдоэлемента.*/
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath fill='%23fff' d='M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z' class=''%3E%3C/path%3E%3C/svg%3E");/*задает фоновое изображение для псевдоэлемента. */
    background-repeat: no-repeat;/*устанавливает запрет на повторение фонового изображения.*/
    background-position: center;/* устанавливает позицию фонового изображения по центру псевдоэлемента.*/
    background-size: cover;/*масштабирует фоновое изображение таким образом, чтобы оно покрывало всю площадь псевдоэлемента, сохраняя при этом свое соотношение сторон.*/
    content: "";/*задает содержимое псевдоэлемента*/
  }
  
  
  .todo__options {
    width: 150px;/* задает ширину элемента в 150 пикселей.*/
    max-width: 100%;/*устанавливает максимальную ширину элемента равной 100% от ширины его родительского элемента. Это означает, что элемент будет занимать всю доступную ширину, если это возможно.*/
    padding: 2px 30px 6px 12px;/*задает внутренние отступы для элемента. */
    color: #fff;/*задает белый цвет текста.*/
    font-size: inherit;/*устанавливает размер шрифта равным наследованному значению от родительского элемента.*/
    font-family: inherit;/* устанавливает семейство шрифта равным наследованному значению от родительского элемента.*/
    line-height: inherit;/*устанавливает высоту строки равной наследованному значению от родительского элемента.*/
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='12' fill='%23fff'%3E%3Cpath d='M0 0h24L12 12z'/%3E%3C/svg%3E")
      calc(100% - 10px) center no-repeat;/* устанавливает фоновое изображение для элемента. */
    background-color: #ef9ae8;/*задает фоновый цвет элемента в фиолетовом оттенке.*/
    background-size: 10px;/* задает размер фонового изображения в 10 пикселей.*/
    border: none;/*устанавливает отсутствие границы для элемента.*/
    border-radius: 4px;/*задает радиус скругления углов элемента в 4 пикселя.*/
    outline: none;/*даляет контурный обвод элемента при получении им фокуса.*/
    cursor: pointer;/*устанавливает курсор мыши в виде указателя, чтобы указать, что элемент является интерактивным и может быть нажат.*/
    appearance: none;/*используется для сброса стандартного внешнего вида элемента формы, такого как кнопки, поля ввода и т.д. */
  }
  .mb-2, .my-2 {
    margin-bottom: 0.5rem!important;/*задает нижний отступ элемента размером 0.5 единицы отступа. */
    margin-left: 600px;/*задает левый отступ элемента размером 600 пикселей*/
  padding-top: 150px;/*задает отступ сверху элемента размером 150 пикселей.*/
}

.display-4 {
    font-size: 3.5rem;/*задает размер шрифта элемента равным 3.5 единицы относительного размера шрифта текущего элемента.*/
    font-weight: 300;/*задает жирность текста элемента равной 300 (обычный шрифт).задает жирность текста элемента равной 300 (обычный шрифт).*/
    line-height: 1.2;/* задает межстрочный интервал элемента равным 1.2 (увеличенный интервал между строками).*/
    position: fixed;/*задает позиционирование элемента как фиксированное. Элемент будет оставаться на одном и том же месте даже при прокрутке страницы.*/
    top: 20px;/*задает отступ сверху элемента размером 20 пикселей.*/
    left: 20px;/* задает отступ слева элемента размером 20 пикселей.*/    
}
/*Он задает максимальную высоту и добавляет вертикальную прокрутку, если содержимое превышает эту высоту.*/
.todo__items-wrapper {
  max-height: 400px; /* Задайте высоту, которая соответствует вашим потребностям */
  overflow-y: auto;/*определяет, как будет обрабатываться содержимое элемента, если его высота превышает доступное пространство по вертикали.*/
}
.todo__due{
  padding-top: 15px;/*устанавливает внутренний отступ сверху элемента равным 15 пикселям. */
 position: relative;/* задает позиционирование элемента как относительное. При использовании относительного позиционирования элемент сдвигается относительно своего нормального положения, но оставляет свой след на странице. */
}
.todo__due-input{
  color:#d292d4;
}
  /* скрываем дефолтную стрелку в IE10 и IE11 */
  .todo__options::-ms-expand {
    display: none;
  }
  
  .todo__options > option {
    color: #212529;
    background-color: #fff;
  }
  
  .todo__items {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    list-style-type: none;
  }
  
  .todo__item {
    position: relative;
    padding: 10px 15px;
    overflow: hidden;
    background-color: #fafafa;
  }
  
  .todo__item:not(:last-child) {
    margin-bottom: 0.5rem;
  }
  
  .todo__date {
    display: flex;
    flex-direction: column;
    color: #9e9e9e;
    font-size: 0.75em;
  }
  
  .todo__action {
    position: absolute;
    top: -20px;
    right: 15px;
    width: 32px;
    height: 32px;
    background-color: #80deea;
    border-radius: 4px;
    transform: translateY(-50%);
    cursor: pointer;
    opacity: 0.5;
    transition: top 0.3s ease-in;
  }
  
  
  .todo__action::before {
    position: absolute;
    top: 6px;
    right: 6px;
    width: 20px;
    height: 20px;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    content: "";
  }
  
  .todo__action_delete {
    right: 52px;
    background-color: #dfb1b1;
  }
  
  .todo__action_complete {
    background-color: #66bb6a;
  }
  
  .todo__action_restore::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23fff' d='M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z'%3E%3C/path%3E%3C/svg%3E");
  }
  
  .todo__action_complete::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23fff' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'%3E%3C/path%3E%3C/svg%3E");
  }
  
  .todo__action_delete::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath fill='%23fff' d='M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z'%3E%3C/path%3E%3C/svg%3E");
  }
  
  .todo__item:hover .todo__action {
    top: 50%;
  }
  
  .todo__item:hover .todo__action:hover {
    opacity: 1;
  }
  
  [data-todo-state="active"] .todo__action_restore,
  [data-todo-state="completed"] .todo__action_complete,
  [data-todo-state="deleted"] .todo__action_complete {
    display: none;
  }
  
  [data-todo-state="completed"] {
    text-decoration: line-through;
    background-color: #f1f8ed;
  }
  
  [data-todo-state="deleted"] .todo__task {
    color: #9e9e9e;
  }
  
  [data-todo-state="deleted"] .todo__action_restore {
    right: 15px;
  }
  
  [data-todo-option="active"] .todo__item:not([data-todo-state="active"]),
  [data-todo-option="completed"] .todo__item:not([data-todo-state="completed"]),
  [data-todo-option="deleted"] .todo__item:not([data-todo-state="deleted"]) {
    display: none;
  }
 
